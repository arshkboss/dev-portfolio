@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 240 10% 3.9%;
    --card: 0 0% 100%;
    --card-foreground: 240 10% 3.9%;
    --popover: 0 0% 100%;
    --popover-foreground: 240 10% 3.9%;
    --primary: 240 5.9% 10%;
    --primary-foreground: 0 0% 98%;
    --secondary: 240 4.8% 95.9%;
    --secondary-foreground: 240 5.9% 10%;
    --muted: 240 4.8% 95.9%;
    --muted-foreground: 240 3.8% 46.1%;
    --accent: 240 4.8% 95.9%;
    --accent-foreground: 240 5.9% 10%;
    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 5.9% 90%;
    --input: 240 5.9% 90%;
    --ring: 240 5.9% 10%;
    --radius: 0.5rem;
    --transition-duration: 200ms;
  }

  .dark {
    --background: 240 10% 3.9%;
    --foreground: 0 0% 98%;
    --card: 240 10% 3.9%;
    --card-foreground: 0 0% 98%;
    --popover: 240 10% 3.9%;
    --popover-foreground: 0 0% 98%;
    --primary: 0 0% 98%;
    --primary-foreground: 240 5.9% 10%;
    --secondary: 240 3.7% 15.9%;
    --secondary-foreground: 0 0% 98%;
    --muted: 240 3.7% 15.9%;
    --muted-foreground: 240 5% 64.9%;
    --accent: 240 3.7% 15.9%;
    --accent-foreground: 0 0% 98%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;
    --border: 240 3.7% 15.9%;
    --input: 240 3.7% 15.9%;
    --ring: 240 4.9% 83.9%;
  }

  * {
    @apply border-border;
  }
  
  /* Add smooth theme transition */
  :root {
    --transition-duration: 200ms;
  }

  body {
    @apply bg-background text-foreground relative min-h-screen;
    transition: background-color var(--transition-duration) ease,
                color var(--transition-duration) ease;
  }

  /* Make all themed elements transition smoothly */
  *, *::before, *::after {
    transition: background-color var(--transition-duration) ease,
                border-color var(--transition-duration) ease,
                color var(--transition-duration) ease,
                box-shadow var(--transition-duration) ease;
  }
  
  /* Grid background pattern */
  body::before {
    content: "";
    position: fixed;
    inset: 0;
    pointer-events: none;
    background-image: 
      linear-gradient(to right, rgb(var(--foreground) / 0.03) 1px, transparent 1px),
      linear-gradient(to bottom, rgb(var(--foreground) / 0.03) 1px, transparent 1px);
    background-size: 60px 60px;
    background-position: center center;
    mask-image: radial-gradient(circle at center, 
      rgb(var(--background)) 30%, 
      transparent 80%
    );
    z-index: -2;
  }

  /* Larger grid lines */
  body::after {
    content: "";
    position: fixed;
    inset: 0;
    pointer-events: none;
    background-image: 
      linear-gradient(to right, rgb(var(--foreground) / 0.05) 1px, transparent 1px),
      linear-gradient(to bottom, rgb(var(--foreground) / 0.05) 1px, transparent 1px);
    background-size: 180px 180px;
    background-position: center center;
    z-index: -1;
  }

  /* Content z-index */
  main, header, nav, section {
    position: relative;
    z-index: 1;
  }

  /* Card styling */
  .card {
    position: relative;
    backdrop-filter: blur(8px);
    background: rgb(var(--background) / 0.8);
    z-index: 10;
  }
  
  .card::before {
    content: "";
    position: absolute;
    inset: -1px;
    border-radius: inherit;
    padding: 1px;
    background: linear-gradient(
      45deg,
      rgb(var(--foreground) / 0.2),
      transparent,
      rgb(var(--foreground) / 0.2)
    );
    mask: linear-gradient(#fff 0 0) content-box,
          linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
    pointer-events: none;
  }
} 